<% %w(node_name
      chef_license
      chef_server_url
      event_loggers
      file_backup_path
      file_cache_path
      file_staging_uses_destdir
      formatters
      http_proxy
      https_proxy
      ftp_proxy
      log_level
      log_location
      minimal_ohai
      named_run_list
      no_proxy
      ohai_disabled_plugins
      ohai_optional_plugins
      pid_file
      policy_group
      policy_name
      run_path
      ssl_verify_mode).each do |prop| -%>
<% next if eval('@' + prop).nil? || eval('@' + prop).empty? -%>
<%=prop %> = <%= eval('@' + prop).inspect %>
<% end -%>
<% unless @ohai_disabled_plugins.empty? -%>
ohai.disabled_plugins = [<%= @ohai_disabled_plugins.map { |k| k.match(/:/) ? k.gsub(/^:/, '').to_sym.inspect : k.inspect }.join(",") %>]
<% end -%>
<% unless @ohai_optional_plugins.empty? -%>
ohai.optional_plugins = [<%= @ohai_optional_plugins.map { |k| k.match(/:/) ? k.gsub(/^:/, '').to_sym.inspect : k.inspect }.join(",") %>]
<% end -%>
<% if @start_handlers.is_a?(Array) && @start_handlers.any? -%>
  # Do not crash if a start handler is missing / not installed yet
  begin
  <% @start_handlers.each do |handler| -%>
    start_handlers << <%= handler["class"] %>.new(<%= handler["arguments"].join(',') %>)
  <% end -%>
  rescue NameError => e
    Chef::Log.error e
  end
<% end -%>
<% if @report_handlers.is_a?(Array) && @report_handlers.any? -%>
  # Do not crash if a report handler is missing / not installed yet
  begin
  <% @report_handlers.each do |handler| -%>
    report_handlers << <%= handler["class"] %>.new(<%= handler["arguments"].join(',') %>)
  <% end -%>
  rescue NameError => e
    Chef::Log.error e
  end
<% end -%>
<% if @exception_handlers.is_a?(Array) && @exception_handlers.any? -%>
  # Do not crash if an exception handler is missing / not installed yet
  begin
  <% @exception_handlers.each do |handler| -%>
    exception_handlers << <%= handler["class"] %>.new(<%= handler["arguments"].join(',') %>)
  <% end -%>
  rescue NameError => e
    Chef::Log.error e
  end
<% end -%>
